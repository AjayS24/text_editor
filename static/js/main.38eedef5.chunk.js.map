{"version":3,"sources":["components/wordsList.txt","components/Trie.js","components/RecommendationDropDown.js","components/SearchResults.js","components/ZFunction.js","components/SearchWords.js","components/typeSpace.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Node","value","Object","classCallCheck","this","suggestions","children","Trie","root","word","idx","_step","current","_iterator","_createForOfIteratorHelper","s","n","done","character","length","push","undefined","err","e","f","toLowerCase","_step2","_iterator2","RecommendationDropDown","_ref","text","toSetDisplayText","_useState","useState","_useState2","slicedToArray","recommendations","setRecommendations","_useState3","_useState4","trie","setTrie","_useState5","_useState6","words","setWords","useEffect","find","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","tempTrie","wrap","_context","prev","next","fetch","raw","then","r","split","i","insert","console","log","error","stop","apply","arguments","getWords","recommendationList","map","recommendation","react_default","a","createElement","className","key","onClick","id","SearchResults","lineArray","matchIndex","results","setResults","_loop","line","SearchResults_createForOfIteratorHelper","_loop2","j","concat","toConsumableArray","substring","Math","max","keys","ZFunction","pattern","setMatchIndex","setLineArray","collection","search","arr","l","Z","Array","getZarr","str","L","R","toUpperCase","k","src_components_SearchResults","SerachWords","displayText","searchPattern","setSearchPattern","suggestion","type","placeholder","aria-label","onChange","event","target","components_ZFunction","TypeSpace","setText","setDisplayText","wrappedParts","setWrappedParts","_useState7","_useState8","previousText","setPriviousText","rows","column","spellCheck","string","stringParts","flag","src_components_RecommendationDropDown","SearchWords","App","components_typeSpace","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.38eedef5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wordsList.f32c51d4.txt\";","class Node {\r\n  constructor(value) {\r\n    this.value = value\r\n    this.suggestions = []\r\n    this.children = {} \r\n  }\r\n}\r\n\r\nclass Trie{\r\n  constructor(){\r\n    this.root = new Node(null)\r\n  }\r\n\r\n  insert(word, idx){\r\n\r\n      let current = this.root\r\n\r\n      for (let character of word) {\r\n\r\n          if (current.suggestions.length < 5) {\r\n              current.suggestions.push(idx)\r\n          }\r\n\r\n          if(current.children[character] === undefined){\r\n              current.children[character] = new Node(character)\r\n          }\r\n\r\n          current = current.children[character]\r\n      }\r\n\r\n  }\r\n\r\n  find(word){\r\n      if(word === '\\n' || word === ' ' || (!word.length)){\r\n        return []\r\n      }\r\n      word = word.toLowerCase()\r\n     let current = this.root\r\n\r\n    for(let character of word){\r\n         if(current.children[character] === undefined){\r\n             return current.suggestions\r\n         }\r\n        current = current.children[character]  \r\n    }\r\n    return current.suggestions\r\n  }\r\n}\r\n\r\nexport default Trie;\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Trie from \"./Trie\";\r\nimport raw from './wordsList.txt';\r\nimport './RecommendationDropDown.css'\r\nconst RecommendationDropDown = ({text,toSetDisplayText}) => {\r\n    const [recommendations,setRecommendations] = useState([])\r\n    const [trie,setTrie] = useState(new Trie())\r\n    const [words,setWords] = useState([])\r\n    useEffect( () =>{\r\n        setRecommendations(trie.find(text))\r\n    },[text,trie])\r\n\r\n    useEffect( () => {const getWords = async() => {\r\n        try {\r\n            let res = []\r\n            let tempTrie = new Trie()\r\n\r\n            fetch(raw)\r\n            .then(r => r.text())\r\n            .then(text => {\r\n                res = text.split(/\\r?\\n/);\r\n                for (let i = 0; i < res.length; i++) {\r\n                    tempTrie.insert(res[i], i)\r\n                }\r\n                setWords(res)\r\n            });            \r\n        \r\n\r\n            setTrie(tempTrie)\r\n            console.log(\"DONE CREATING TRIE\")\r\n        } catch (error) {\r\n            console.log(\"ERROR IN GETTING WORDS -> \", error)\r\n        }\r\n    } ; getWords() }     , [] )\r\n    \r\n\r\n    const recommendationList = recommendations.map((recommendation,i) => {\r\n\r\n        return(\r\n            <button className = \"btn btn-outline-primary list-group-item-info\" key = {i} value = {words[recommendation]} onClick={toSetDisplayText}>{words[recommendation]}</button>\r\n        )\r\n    })\r\n    return(<div>\r\n        <h5  id = \"font\"><b>TYPE AHEAD</b></h5>\r\n        <output >{text}<br /></output>\r\n        <div>\r\n            <div className=\"btn-group-vertical \">\r\n                {text.length > 1 || text[0] !== ' '?recommendationList:[]}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default RecommendationDropDown;","import React from \"react\";\r\nimport { useEffect, useState } from \"react\"\r\nimport './SearchResults.css'\r\nconst SearchResults = ({lineArray,matchIndex,length}) => {\r\n    const [results,setResults] = useState([])\r\n    useEffect(() => {\r\n        setResults([])\r\n        try{\r\n            for(let i = 0;i < Object.keys(matchIndex).length;i++){\r\n                const line = lineArray[i]\r\n                for(let j of matchIndex[i+1]){\r\n                    if(line)\r\n                        setResults(results => [...results, <li className=\"list-group-item lines\"  key = {[i,j]}><h5>line {i+1}: ...{line.substring(Math.max(0,j-10),j)}<b>{line.substring(j,j+length)}</b>{line.substring(j+length,j+(length<10?10:length+5))}...</h5></li>])\r\n                }\r\n            }\r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n        }\r\n        \r\n    },[matchIndex])\r\n\r\n    return(\r\n        <div  className=\"scrl\">\r\n            <ul className = \"list-group\">\r\n                {results}\r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default SearchResults","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport SearchResults from \"./SearchResults\";\r\n\r\nconst ZFunction = ({text,pattern}) =>{\r\n    const [matchIndex,setMatchIndex] = useState([])\r\n    const [lineArray,setLineArray] = useState([])\r\n    useEffect(() => {\r\n        const collection = {}\r\n        if(text.length){\r\n            setLineArray(text.split('\\n'))\r\n            for(let i  = 1;i <= lineArray.length;i++){\r\n                collection[i] = []\r\n                search(lineArray[i-1],pattern,collection[i])\r\n            }\r\n        }\r\n        setMatchIndex(collection)\r\n    },[pattern])\r\n    const  search = (line,word,arr) =>{\r\n        if(!word.length){\r\n            return\r\n        }\r\n        let concat = word + \"$\" + line;\r\n\r\n        let l = concat.length;\r\n\r\n        let Z = new Array(l);\r\n\r\n        getZarr(concat, Z);\r\n        for(let i = 0; i < l; ++i){\r\n            if(Z[i] == word.length){\r\n                arr.push(i-word.length-1)\r\n            }\r\n        }\r\n    }\r\n\r\n    const getZarr = (str,Z) =>{\r\n        let n = str.length;\r\n        let L = 0, R = 0;\r\n        for(let i = 1; i < n; ++i) {\r\n            if(i > R){\r\n                L = R = i;\r\n                while(R < n && str[R - L].toUpperCase() === str[R].toUpperCase())\r\n                    R++;\t\t\r\n                Z[i] = R - L;\r\n                R--;\r\n            }\r\n            else{\r\n                let k = i - L;\r\n\r\n                if(Z[k] < R - i + 1)\r\n                    Z[i] = Z[k];\r\n                else{\r\n                    L = i;\r\n                    while(R < n && str[R - L] == str[R])\r\n                        R++;\r\n                    Z[i] = R - L;\r\n                    R--;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <SearchResults lineArray={lineArray} matchIndex = {matchIndex} length = {pattern.length}/>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ZFunction; \r\n","import {  useState } from \"react\";\r\nimport ZFunction from \"./ZFunction\";\r\nimport React from \"react\";\r\n\r\nconst SerachWords = ({displayText}) => {\r\n    const [searchPattern,setSearchPattern] = useState(\"\")\r\n    const onInputChange = (event) => {\r\n        setSearchPattern(event.target.value)\r\n        \r\n    }\r\n    return(\r\n        <div>\r\n            <div >\r\n                <input id=\"find\" suggestion = \"false\" className=\"form-control\" type=\"text\" placeholder=\"Find\" aria-label=\"Find\" onChange = {onInputChange}/>\r\n            </div>\r\n            \r\n            <hr />\r\n            <ZFunction text={displayText} pattern = {searchPattern}/>\r\n        </div>\r\n    )\r\n}\r\nexport default SerachWords;","import React, { useState } from \"react\";\r\nimport RecommendationDropDown from \"./RecommendationDropDown\";\r\nimport SerachWords from \"./SearchWords\";\r\nimport './typeSpace.css'\r\n\r\n\r\nconst TypeSpace = () =>{\r\n  const [text,setText] = useState(\"\");\r\n  const [displayText,setDisplayText] = useState(\"\");\r\n  const [wrappedParts,setWrappedParts] = useState([]);\r\n  const [previousText,setPriviousText] = useState([]);\r\n\r\n\r\n\r\n  const onTextChange = (event) => {\r\n    setDisplayText(event.target.value)\r\n    const string = event.target.value;\r\n    let stringParts = [];\r\n    for(let i = 0;i < string.length;i++){\r\n      if(string[i] !== '\\n' && string[i] !== ' '){\r\n        let j = i;\r\n        while(j < string.length && string[j] !== '\\n' && string[j] !== ' ')j++;\r\n        if(j >= string.length){\r\n          stringParts.push(string.substring(i));\r\n          stringParts.push(' ');\r\n        }\r\n        else{\r\n          stringParts.push(string.substring(i,j));\r\n          stringParts.push(string[j]);\r\n        }\r\n        i = j;\r\n      }\r\n      else{\r\n        stringParts.push(string[i]);\r\n      }\r\n    }\r\n    let flag = 1;\r\n    for(let i = 0;i < stringParts.length;i++){\r\n      if(wrappedParts[i] !== stringParts[i]){\r\n        setText(stringParts[i]);\r\n        flag = 0;\r\n        break;\r\n      }\r\n    }\r\n    if(flag){\r\n      setText(\"\")\r\n    }\r\n    setPriviousText(wrappedParts);\r\n    setWrappedParts(stringParts);\r\n  }\r\n\r\n\r\n  const toSetDisplayText = (event) =>{\r\n    for(let i = 0;i < wrappedParts.length;i++){\r\n      if(wrappedParts[i] !== previousText[i]){\r\n        wrappedParts[i] = event.target.value;\r\n        break;\r\n      }\r\n    }\r\n    let string = \"\";\r\n    for(let i = 0;i < wrappedParts.length;i++){\r\n      string += wrappedParts[i];\r\n    }\r\n\r\n    setDisplayText(string);\r\n    setText(\"\")\r\n  }\r\n\r\n  return(\r\n      <div className=\"container \">\r\n        <div id = \"fb\">\r\n          <h2  id = \"heading\">TEXT EDITOR</h2>\r\n        </div>\r\n        <div className=\"row  \">\r\n          <div  className = \"p-2 col-12\">\r\n            <textarea  className=\"form-control textarea\" rows = \"16\" column = \"5\" id=\"comment\" spellCheck = \"false\" placeholder=\"type here\" onChange={onTextChange} value = {displayText}/>\r\n          </div>\r\n          <div className = \"p-2 col-4\">\r\n            <RecommendationDropDown  text = {text} toSetDisplayText = {toSetDisplayText}/>\r\n          </div> \r\n          <div  className = \"p-2 col-8\">\r\n            <SerachWords displayText={displayText}/>\r\n          </div> \r\n            \r\n        </div>\r\n      </div>\r\n  );\r\n}\r\nexport default TypeSpace;","import './App.css';\nimport React from \"react\";\nimport TypeSpace from './components/typeSpace';\n\nfunction App() {\n  return < TypeSpace/>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n"],"sourceRoot":""}